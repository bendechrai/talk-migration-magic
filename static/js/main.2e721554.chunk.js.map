{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","footer","react_default","a","createElement","dist","left","right","presenterNotes","notes","src","full","color","className","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e721554.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Deck, Slide, Title, Subtitle, Text, List, Image, Columns, Footer } from '@sambego/diorama';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const footer = <Footer left=\"@bendechrai\" right=\"https://ben.sc\" />\n\n  return (\n    <Deck footer={footer} presenterNotes>\n      <Slide notes=\"Hello\">\n        <Image src=\"/images/magician.jpg\" full color=\"#777\" />\n        <div className=\"title-overlay\">\n          <div>\n            <Title>✨ Abracadabra ✨</Title>\n            <Title>Let Me In</Title>\n          </div>\n          <div>\n            <Subtitle>Ben Dechrai</Subtitle>\n            <Text>Developer Evangelist @ Auth0</Text>\n          </div>\n        </div>\n      </Slide>\n      <Slide>\n        <Columns>\n          <div>\n            <Image src=\"/images/bendechrai.jpg\" alt=\"Photo of Ben\" full />\n          </div>\n          <div>\n            <Subtitle>Ben Dechrai</Subtitle>\n            <List>\n              <li>I ❤️ Security</li>\n              <li>Privacy Advocate</li>\n              <li>Tech Evangelist @ Auth0</li>\n            </List>\n          </div>\n        </Columns>\n      </Slide>\n      <Slide>\n        <Title>Migration</Title>\n      </Slide>\n      <Slide>\n        <Image src=\"/images/waterfall.jpg\" full color=\"#bbb\" />\n        <div className=\"title-overlay\">\n          <Title>Waterfall Lifecycle</Title>\n        </div>\n      </Slide>\n      <Slide>\n        <Columns>\n          <div>\n            <Image src=\"/images/pieces.jpg\" full color=\"#ccc\" />\n          </div>\n          <div>\n            <List>\n              <li>Start from scratch</li>\n              <li>There's always some functionality you missed</li>\n            </List>\n          </div>\n        </Columns>\n      </Slide>\n      <Slide>\n        <Columns>\n          <div>\n            <Title>The New</Title>\n            <Subtitle>Same as the old</Subtitle>\n            <Text>(The old product doesn't stay static)</Text>\n          </div>\n          <div>\n            <Image src=\"/images/nailedit.jpg\" color=\"#ccc\" />\n          </div>\n        </Columns>\n      </Slide>\n      <Slide>\n        <Image src=\"/images/fire.jpg\" full color=\"#777\" />\n        <div className=\"title-overlay\">\n          <Title>On launch day, migration fails</Title>\n        </div>\n      </Slide>\n      <Slide>\n        <Image src=\"/images/fire.jpg\" full color=\"#555\" />\n        <div className=\"title-overlay\">\n          <Title>Two options</Title>\n          <Columns>\n            <div>\n              <Text>Fix in production</Text>\n            </div>\n            <div>\n              <Text>Roll back</Text>\n            </div>\n          </Columns>\n        </div>\n      </Slide>\n      <Slide>\n        <Image src=\"/images/waterfall.jpg\" full color=\"#f88\" />\n        <div className=\"title-overlay\">\n          <Title>Not Waterfall Lifecycle</Title>\n        </div>\n      </Slide>\n      <Slide>\n        <Title>Refactoring?</Title>\n      </Slide>\n      <Slide>\n        <Subtitle>Refactoring != Rewriting</Subtitle>\n      </Slide>\n      <Slide>\n        <Image src=\"/images/transform.jpg\" full color=\"#777\" />\n        <div className=\"title-overlay\">\n          <List>\n            <ul>We refactor all the time</ul>\n            <ul>We create technical debt to meet a deadline</ul>\n            <ul>With the promise of fixing it later</ul>\n          </List>\n        </div>\n      </Slide>\n      <Slide>\n        <Text>Break a product down into its major parts</Text>\n      </Slide>\n      <Slide>\n        <Text>Break a product down into its major parts</Text>\n        <Text>Pick one part, and refeactor that in to a component</Text>\n      </Slide>\n      <Slide>\n        <Text>Break a product down into its basic components</Text>\n        <Text>Pick one part, and refeactor that in to a component</Text>\n        <Text>* This only works if you're migrating to something that can also use that component</Text>\n      </Slide>\n      <Slide>\n        <List>\n          <li>Extract repeated code and put it in functions</li>\n          <li>Group functions in classes to combine logical collections</li>\n          <li>Group classes in to exportable modules / components</li>\n        </List>\n      </Slide>\n      <Slide>\n        <Title>Don't reinvent the wheel</Title>\n      </Slide>\n      <Slide>\n        <Text>Don't create a component that someone else has already written</Text>\n      </Slide>\n      <Slide>\n        <Text>If these components are not your core business features, they can be separated out in to libraries and be managed separately.</Text>\n      </Slide>\n      <Slide>\n        <Text>Start replacing them with existing libraries which have more community backing and adoption.</Text>\n      </Slide>\n      <Slide>\n        <Text>Doesn't quite work as you want? Submit a pull request!</Text>\n      </Slide>\n      <Slide>\n        <Text>Can't find one? Make yours open source! You'll be helping others, without giving away your business advantage.</Text>\n        <Text>In return, you'll get recognition from the community, build your company's brand in the eyes of developers, and people might even start volunteering to help you make your code even better!</Text>\n      </Slide>\n      <Slide>\n        <Text>Outsource the Mundane</Text>\n      </Slide>\n      <Slide>\n        <Text>The next level of refactoring is to move logic to the cloud, and away from your application altogether:</Text>\n        <List>\n          <li>host your images and other static assets with a CDN</li>\n          <li>use a payment provider to reduce the legal worries of processing credit cards yourself</li>\n          <li>use an identity provider to reduce the risk of storing user credential</li>\n        </List>\n      </Slide>\n      <Slide>\n        <Text>Identify the components of your systems that can actually be systems in their own right. You're making the footprint of your main application much smaller now, which makes it easier to migrate. It also makes it easier to maintain in future, reduces the load on your servers, and makes scaling easier when you need to.</Text>\n      </Slide>\n      <Slide>\n        <Title>Demo</Title>\n      </Slide>\n      <Slide>\n        <Text>Let's look at migrating a simple blog from Wordpress to Laravel. What are the components in Wordpress that we need to consider?</Text>\n      </Slide>\n      <Slide>\n        <Title>Blog Posts</Title>\n        <Text>Business features - custom code</Text>\n        <Text>Migrate data from the Wordpress schema to your Laravel application</Text>\n      </Slide>\n      <Slide>\n        <Title>Commenting</Title>\n        <Text>Comments are associated with posts and users</Text>\n        <Text>Migrating would need to a comment table and model...</Text>\n        <Text>Associated with a user and blog post...</Text>\n      </Slide>\n      <Slide>\n        <Title>Commenting</Title>\n        <Text>Then we'd need to migrate the comments</Text>\n        <Text>and users associated with that comment,</Text>\n        <Text>and make the correct associations</Text>\n      </Slide>\n      <Slide>\n        <Title>Commenting</Title>\n        <Text>Ignoring the complexity of the user model for now, that's complex enough already.</Text>\n      </Slide>\n      <Slide>\n        <Title>Commenting</Title>\n        <Text>Let's outsource this to a system like Disqus</Text>\n        <Text>Low risk model - these comments are public anyway</Text>\n        <Text>Disqus do the migration for you!</Text>\n      </Slide>\n      <Slide>\n        <Title>Login, Logout & Registration</Title>\n      </Slide>\n      <Slide>\n        <Title>Login, Logout & Registration</Title>\n        <Text>We don't do our own credit card processing</Text>\n        <Text>So why our own identity management?</Text>\n      </Slide>\n      <Slide>\n        <Title>Login, Logout & Registration</Title>\n        <Text>Let's outsource this too, to an ID as a Service provider</Text>\n      </Slide>\n      <Slide>\n        <Text>At it's core, these components give you the Wordpress blog. There are many more features to Wordpress, but we'll just focus on these right now. What can we do about any of them?</Text>\n      </Slide>\n      <Slide>\n        <Title>Demo</Title>\n      </Slide>\n      <Slide>\n        <Columns>\n          <div>\n            <Image src=\"/images/bendechrai.jpg\" alt=\"Photo of Ben\" full />\n          </div>\n          <div>\n            <Subtitle>Thanks</Subtitle>\n            <Text>Questions?</Text>\n          </div>\n        </Columns>\n      </Slide>\n    </Deck>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}